{
	"info": {
		"_postman_id": "785ec99a-3c48-43bb-805a-a2ddddba9847",
		"name": "demo01",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "1453931",
		"_collection_link": "https://red-firefly-245852.postman.co/workspace/FullStack~9946c0fb-b821-4fe1-ad63-82fbf95500c7/collection/1453931-785ec99a-3c48-43bb-805a-a2ddddba9847?action=share&source=collection_link&creator=1453931"
	},
	"item": [
		{
			"name": "Get user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get user by id :: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"const jsonSchema = {",
							"    type: 'object',",
							"    properties: {",
							"        id: { type: 'integer' },",
							"        name: { type: 'string' },",
							"        username: { type: 'string' },",
							"        email: { type: 'string', format: 'email' },",
							"        address: {",
							"            type: 'object',",
							"            properties: {",
							"                street: { type: 'string' },",
							"                suite: { type: 'string' },",
							"                city: { type: 'string' },",
							"                zipcode: { type: 'string' },",
							"                geo: {",
							"                    type: 'object',",
							"                    properties: {",
							"                        lat: { type: 'string' },",
							"                        lng: { type: 'string' }",
							"                    },",
							"                    required: ['lat', 'lng']",
							"                }",
							"            },",
							"            required: ['street', 'suite', 'city', 'zipcode', 'geo']",
							"        },",
							"        phone: { type: 'string' },",
							"        website: { type: 'string' },",
							"        company: {",
							"            type: 'object',",
							"            properties: {",
							"                name: { type: 'string' },",
							"                catchPhrase: { type: 'string' },",
							"                bs: { type: 'string' }",
							"            },",
							"            required: ['name', 'catchPhrase', 'bs']",
							"        }",
							"    },",
							"    required: ['id', 'name', 'username', 'email', 'address', 'phone', 'website', 'company']",
							"};",
							"",
							"pm.test(\"Get user by id :: Validate JSON Schema\", function() {",
							"    pm.expect(tv4.validate(response, jsonSchema)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://jsonplaceholder.typicode.com/users/1"
			},
			"response": []
		}
	]
}